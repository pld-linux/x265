--- x265_4.1/source/CMakeLists.txt.orig	2025-02-25 13:15:13.529283788 +0100
+++ x265_4.1/source/CMakeLists.txt	2025-02-25 13:16:48.416480326 +0100
@@ -46,10 +46,8 @@
     string(TOLOWER "${CMAKE_SYSTEM_PROCESSOR}" SYSPROC)
 endif()
 set(X86_ALIASES x86 i386 i686 x86_64 amd64)
-set(ARM_ALIASES armv6l armv7l)
 set(ARM64_ALIASES arm64 arm64e aarch64)
 list(FIND X86_ALIASES "${SYSPROC}" X86MATCH)
-list(FIND ARM_ALIASES "${SYSPROC}" ARMMATCH)
 list(FIND ARM64_ALIASES "${SYSPROC}" ARM64MATCH)
 set(POWER_ALIASES powerpc64 powerpc64le ppc64 ppc64le)
 list(FIND POWER_ALIASES "${SYSPROC}" POWERMATCH)
@@ -72,7 +70,7 @@
         add_definitions(-DPPC64=1)
         message(STATUS "Detected POWER PPC64 target processor")
     endif()
-elseif(ARMMATCH GREATER "-1")
+elseif(${SYSPROC} MATCHES "armv[67]")
     if(CROSS_COMPILE_ARM)
         message(STATUS "Cross compiling for ARM arch")
     else()
@@ -80,6 +78,7 @@
     endif()
 	message(STATUS "Detected ARM target processor")
     set(ARM 1)
+    option(ENABLE_NEON "Enable Neon" ON)
     add_definitions(-DX265_ARCH_ARM=1 -DHAVE_ARMV6=1)
 elseif(ARM64MATCH GREATER "-1")
     message(STATUS "Detected ARM64 target processor")
@@ -265,18 +264,6 @@
             endif()
         endif()
     endif()
-    if(ARM AND CROSS_COMPILE_ARM)
-        message(STATUS "cross compile arm")
-		set(ARM_ARGS -march=armv6 -mfloat-abi=soft -mfpu=vfp -marm -fPIC)
-    elseif(ARM)
-        find_package(Neon)
-        if(CPU_HAS_NEON)
-            set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=neon -marm -fPIC)
-            add_definitions(-DHAVE_NEON)
-        else()
-            set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=vfp -marm)
-        endif()
-    endif()
     if(ARM64)
         set(CPU_HAS_NEON 1)
         add_definitions(-DX265_ARCH_ARM64=1)
@@ -395,7 +382,6 @@
             message(STATUS "Found SVE2")
             add_definitions(-DHAVE_SVE2=1)
         endif()
-        set(ARM_ARGS -O3)
         # Do not allow implicit vector type conversions in Clang builds (this
         # is already the default in GCC builds).
         check_cxx_compiler_flag(-flax-vector-conversions=none CC_HAS_FLAX_VEC_CONV_NONE)
@@ -406,6 +392,8 @@
     if(ENABLE_PIC)
         list(APPEND ARM_ARGS -DPIC -fPIC)
     endif()
+    string(REPLACE " " ";" ARM_ARGS_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+    set(ARM_ARGS ${ARM_ARGS} ${ARM_ARGS_CXX_FLAGS})
     add_definitions(${ARM_ARGS})
     if(FPROFILE_GENERATE)
         if(INTEL_CXX)
